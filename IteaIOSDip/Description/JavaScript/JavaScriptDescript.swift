//
//  JavaScriptDescript.swift
//  IteaIOSDip
//
//  Created by alexey sorochan on 12/2/19.
//  Copyright © 2019 alexey sorochan. All rights reserved.
//

import Foundation


// MARK DESCRIPTION
func JavaScriptDescription() -> CoursesTypeDescription {
    let javaSctipt = CoursesTypeDescription()
    javaSctipt.typeDescription = """
    — комплексная программа обучения программированию на языке JavaScript с нуля. Язык JavaScript популярен и прост в использовании. Он широко применяется в браузерах для создания интерактивных веб-страниц, для разработки назначения пользовательских интерфейсов с помощью фреймворков. Roadmap JS development состоит из взаимосвязанных направлений, которые помогут овладеть основами JS-разработки и стать специалистом уровня junior. Специальность JavaScript developer – востребована как на биржах фриланса, так и в крупных IТ-компаниях. Зарплаты Java Script-разработчиков стартуют от 300 $! Удобные условия работы, гибкий график, комфортные офисы, корпоративное обучение, рост зарплаты – все это преимущества специализации JS-разработчика. Уроки состоят из 70% практики и 30% теории. Преподаватели курса – опытные программисты из ведущих компаний IТ, расскажут о неписаных правилах и секретах успешной JavaScript-разработки.
    """
    javaSctipt.typeLevelDescription = """
    •    Понимать прототипно-ориентированную модель программирования JavaScript
    •    Работать с массивами, функциями, объектами, условными и цикличными конструкциями
    •    Работать с технологией AJAX
    •    Работать с ООП в JavaScript
    •    Проверять и рефакторить код на предмет ошибок
    •    Создавать плагины JavaScript
    •    Создавать и оптимизировать быстрые и плавные анимации для браузеров
    •    Ускорять работу и процесс загрузки страницы
    •    Создавать Angular-приложения
    •    Создавать приложения на Node.js
    •    Создавать веб-сервисы на express.js
    •    Работать с веб-сокетами с помощью socket.io
    """
    return javaSctipt
}

func JavaScriptCoursesDescrioption() -> [CourseDescription] {
    let html = CourseDescription()
    html.courseDescriotion = """
    Курс HTML/CSS —  это обучение работе с языком разметки веб-страниц. Программа предназначена для новичков, которые желают изучить основы работы с front end-разработкой.
    На курсе вы сможете освоить HTML с нуля: ознакомиться с теоретическими основами верстки и структурой HTML-документа, порядком публикации документов в web и сможете создавать полноценные страницы. HTML для начинающих является базисом для веб-разработчиков, а после его изучения уже можно начинать работать над реальными проектами. Уже первый урок даст возможность попрактиковаться в создании несложных HTML-страниц, работе с мультимедиа и таблицами стилей CSS.
    """
    html.courseSkills = """
    •    Создавать веб страницы;
    •    Наполнять их содержимым (текстом, ссылками, спецсимволами, изображениями, фонами, подключать иконочные и обычные шрифты и тд);
    •    Добавлять стили всем элементам веб-страницы;
    •    Выгружать сайты на хостинг;
    •    Понимать и разбираться в адаптивной, кроссбраузерной, попиксельной, резиновой, cмешанной и статичной верстках;
    •    Работать с WORDPRESS (Создавать и подключать базу данных к WP, загружать темы и работать с плагинами);
    •    Сверстать одностраничный сайт и выгрузить его на хостинг для общего доступа пользователей по ссылке.
    """
    html.courseProgram = """
    •    Ввод в веб-технологии
    ◦    Предназначение технологий;
    ◦    Стек разработки для сайта;
    ◦    Принцип работы «клиент-сервер»;
    ◦    Консоль разработчика;
    ◦    Текстовый редактор и IDE;
    ◦    Что такое HTML&CSS&JS и их взаимодействие;
    •    HTML
    ◦    Базовые принципы верстки;
    ◦    Знакомство с понятием тега и атрибута;
    ◦    Обязательная структура любой веб-страницы;
    ◦    Понятия строчных и блочных элементов веб страницы;
    ◦    Понятия парных и непарных тегов;
    ◦    Семантические теги;
    ◦    Спецсимволы;
    ◦    Работа с тегами и атрибутами;
    ◦    Работа с ссылками и якорями;
    ◦    Работа с текстом и комментариями;
    ◦    Работа с различными системами цветов в HTML;
    ◦    Работа с изображениями;
    ◦    Нумерованные и маркированные списки;
    ◦    Работа с блоками (div);
    ◦    Таблицы;
    ◦    Формы;
    ◦    Элементы форм (инпуты);
    ◦    Айфреймы;
    ◦    Подключение разных модулей к документу HTML;
    ◦    Форматирование элементов HTML;
    •    Работа с браузером
    ◦    Установка полезных расширений для верстки;
    ◦    Отладчик кода;
    •    Хостинговые и доменные панели;
    •    Файловый менеджер (Filezilla);
    •    CSS
    ◦    Что такое CSS;
    ◦    Базовые принципы написания стилей;
    ◦    3 способа добавления CSS на HTML-страницу;
    ◦    Внешние таблицы стилей;
    ◦    Относительные и статичные единицы измерения;
    ◦    Работа со шрифтами (семейства, стили, размеры, насыщенность)
    ◦    Работа с границами элементов (бордер, радиус, тени);
    ◦    Работа с отступами и размерами элементов;
    ◦    Градиенты;
    ◦    Работа со свойствами float и clear;
    ◦    Flex box;
    ◦    Работа с фоном (изображения и цвет, размеры, прозрачность);
    ◦    Селекторы;
    ◦    Продвинутые селекторы;
    ◦    Приоритеты стилей;
    ◦    Перезапись стилей;
    ◦    Псевдоклассы, псевдоэлементы;
    ◦    Работа с анимацией элементов;
    ◦    Валидация;
    ◦    Медиазапросы;
    •    Адаптивная верстка;
    •    Резиновая верстка;
    •    Pixel perfect верстка;
    •    Статичная верстка;
    •    Кроссбраузерная верстка;
    •    Смешанная верстка;
    •    Фотошоп для разработчика
    ◦    Нарезка макета;
    ◦    Основные инструменты;
    ◦    Понятия сетки;
    •    CMS Wordpress: создание и подключение базы данных;
    ◦    Настройка тем;
    ◦    Настройка плагинов;
    ◦    Настройка меню;
    ◦    Выгрузка на сервер;
    •    Правила именования классов по BEM;
    •    Библиотека Bootstrap;
    •    Основы препроцессора Less;
    """
    let javaScriptBase = CourseDescription()
    javaScriptBase.courseDescriotion = """
    Базовый курс JavaScript позволит вам изучить JavaScript с нуля или упорядочить и дополнить уже существующие знания.
    Уроки JavaScript для новичков посвящены фундаментальным аспектам этого языка программирования: лексическая структура, работа с переменными, типами операторов, функциями, массивами, объектами и другими разновидностями данных.
    Часть курса направлена на обучение работе с системой контроля версий Git и практическим занятиям, благодаря чему JavaScript для начинающих станет максимально ориентированным на получение знаний, применимых в реальных проектах.
    """
    javaScriptBase.courseSkills = """
    •    Работать с консолью разработчика и проверять код на предмет ошибок;
    •    Проводить различные операции с переменными, операторами, типами данных;
    •    Создавать приложения с помощью изученных условных и циклических конструкций;
    •    Более уверенно работать в команде и понимать логику рабочего процесса при разработке приложения.
    """
    javaScriptBase.courseProgram = """
    Программа курса:
    •    Введение в Javascript
    ◦    Общая информация о языке и его особенности
    ◦    Справочники, спецификации и ссылки на них
    ◦    Консоль разработчика
    ◦    Внешние скрипты и порядок их подключения
    ◦    Переменные и правила их именования
    ◦    Типы данных и приведение типов
    •    Основные операторы
    ◦    Операторы сравнения и логические значения
    ◦    Условные операторы
    ◦    Логические операторы
    ◦    Конструкция switch
    •    Циклы и функции
    ◦    Циклы 'for', 'while', 'do...while'
    ◦    Рекурсия и понятие стека
    ◦    Понятие и синтаксис функции
    ◦    Функциональные выражения
    ◦    Области видимости
    ◦    Псевдомассив 'arguments'
    ◦    Функции обратного вызова (callback)
    •    Массивы
    ◦    Перебирающие методы
    ◦    Внутреннее представление массивов
    •    Объекты
    ◦    Передача по ссылке
    ◦    Перебор свойств
    ◦    Стандартные встроенные объекты
    •    Работа с Git
    ◦    Работа с Git Bash
    ◦    Workflow от создания репозитория до его отправки на удаленный сервер
    ◦    Работа с ветками
    ◦    Работа с конфигурационными файлами
    """
    let javaScriptAdvanced = CourseDescription()
       javaScriptAdvanced.courseDescriotion = """
        Данный курс предназначен для тех, кто владеет базовыми знаниями и может использовать различные языковые конструкции для решения повседневных задач. В ходе обучения мы познакомимся с основоположными аспектами объектно-ориентированного программирования, работе с событиями, протоколом HTTP и прочими важными концепциями. Также будет очень много практики, а именно: разработка 8 приложений и решение задач, способствующих успешному прохождению собеседования.
       """
       javaScriptAdvanced.courseSkills = """
        •    Использовать прототипно-ориентированную модель программирования;
        •    Понимать логику работы клиент-серверной архитектуры в контексте написания реальных приложений;
        •    Управлять DOM через использование Javascript;
        •    Работать с локальными хранилищами данных.
       """
       javaScriptAdvanced.courseProgram = """
        •    Прототипное наследование
        ◦    Прототип объекта
        ◦    Свойство prototype
        ◦    Встроенные классы
        ◦    Функция - конструктор
        ◦    Наследование классов
        ◦    Внутреннее устройство метода 'extend' и полифилл 'Object.create'
        ◦    Функциональное наследование
        •     ООП
        ◦    Общая информация про ООП
        ◦    Инкапсуляция
        ◦    Полиморфизм
        ◦    Наследование
        ◦    Абстракция данных
        ◦    Понятие 'класс'
        •    Контекст вызова и замыкания
        ◦    Работа с 'this' (4 способа использования)
        ◦    Использование 'call', 'apply'
        ◦    Работа с 'bind', карринг и полифилл
        ◦    Дескрипторы, геттеры и сеттеры свойств
        ◦    Шаблон проектирования 'Singletone' через замыкание
        ◦    Сборщик мусора
        •    Глобальный объект Window и работа с DOM
        ◦    Общая информация про 'window', 'navigator', 'document', 'location', 'history'
        ◦    Навигация по DOM элементам
        ◦    Свойства узлов
        ◦    Добавление и удаление узлов
        ◦    Работа со стилями
        ◦    Работа с координатами
        •    События
        ◦    Введение в браузерные события
        ◦    Порядок обработки событий (Event Loop)
        ◦    Асинхронные события
        ◦    Работа с SetTimeout/ SetInterval
        ◦    Всплытие и перехват
        ◦    Делегирование событий
        ◦    События с использованием мыши, клавиатуры и прокрутка
        ◦    Загрузка документа
        •    Работа с системой контроля версий
        •    Формирование страницы в браузере
        ◦    Формирование DOM пошагово
        ◦    Формирование Render Tree
        ◦    Порядок формирования CSSOM
        ◦    Оптимизация, минификация, работа с Http Cache.
        •    Способы хранения данных в браузере
        ◦    Cookies
        ◦    Localstorage/Sessionstorage
        ◦    IndexedDB
        ◦    Manifest
        ◦    ServiceWorker
        ◦    Progressive Web Application
        •    HTTP
        ◦    Введение в Http протокол
        ◦    Преимущества и недостатки протокола
        ◦    Работа с AJAX
        ◦    Общая информация про RESTful API
        ◦    JSON
        ◦    CORS
        ◦    Работа с WebSocket
        ◦    Протокол JSONP

       """
    
    let javaScriptProfessional = CourseDescription()
       javaScriptProfessional.courseDescriotion = """
        В ходе изучения этого курса вы познакомитесь с использованием наиболее популярных шаблонов проектирования. В частности будут рассмотрены MVC, MVP, MVVM и их реализация. Также вы получите понимание функционирования Webpack, которое так необходимо для работы с библиотеками и фреймворками. Уделим внимание наиболее актуальным концепциям разработки приложений, антипаттернам и веб-компонентам.
       """
       javaScriptProfessional.courseSkills = """
        •    Внедрять наиболее оптимальные подходы для решения сложных задач;
        •    Расширить знание языка через использование новых возможностей в ES6, ES7;
        •    Влиять на процесс оптимизации загрузки страницы и делать код читабельней;
        •    На практике использовать шаблоны проектирования и избегать применения антипаттернов.
       """
       javaScriptProfessional.courseProgram = """
        •    Шаблоны проектирования
        ◦    Singleton
        ◦    Facade
        ◦    Mediator
        ◦    Decorator
        ◦    Prototype
        ◦    Command
        ◦    Factory
        ◦    Observer
        ◦    Mixin
        ◦    MVC/MVP/MVVM
        ◦    AMD/CommonJS
        •    Антипаттерны
        •    Webpack
        ◦    Общие сведения, принципы работы
        ◦    Настройка конфигурационного файла
        •    Работа с системой контроля версий
        •    ES6/ES7
        ◦    Переменные 'let'/'const'
        ◦    Деструктуризация
        ◦    Тип данных Symbol
        ◦    Функции, строки, объекты
        ◦    Set/Map
        ◦    Promise
        ◦    Async/await
        •    Веб компоненты
        ◦    Custom Elements
        ◦    Shadow DOM
        ◦    Шаблоны 'template'
        •    Single Page Application
        ◦    Общие сведения, история появления
        ◦    Преимущества и недостатки
        •    Typescript
        ◦    Введение в типы
        ◦    Компиляция
        ◦    Наследование
        ◦    Интерфейсы
       """
    
    return [html, javaScriptBase, javaScriptAdvanced, javaScriptProfessional]
}
